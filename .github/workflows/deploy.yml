name: Deploy to AWS App Runner

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Permite ejecución manual

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: siget-app
  ECR_REGISTRY: 296326295345.dkr.ecr.us-east-1.amazonaws.com
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout del código
      - name: Checkout code
        uses: actions/checkout@v4

      # Configurar credenciales de AWS (con access keys)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Login a Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build, tag, and push image to Amazon ECR
      - name: Build, tag, and push image to ECR
        run: |
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
                        -t $ECR_REGISTRY/$ECR_REPOSITORY:$TIMESTAMP \
                        -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY

      # Desplegar a AWS App Runner (trigger deployment con imagen actualizada)
      - name: Trigger App Runner deployment
        run: |
          aws apprunner start-deployment \
            --service-arn ${{ secrets.AWS_APP_RUNNER_SERVICE_ARN }}
