---
import type { Session } from "@auth/core/types";
import MoreHorizontalIcon from '@/components/icons/MoreHorizontalIcon.astro';
import LogoutIcon from '@/components/icons/LogoutIcon.astro';

interface Props {
    session: Session | null;
}

const { session } = Astro.props;
const user = session?.user;

// Obtener iniciales del usuario si no hay imagen de perfil
const initials = user?.name
    ?.split(' ')
    .map(n => n[0])
    .join('')
    .substring(0, 2)
    .toUpperCase() || '';
---
<div id="user-profile-wrapper" class="relative">

    <!-- Menú desplegable del usuario -->
    <div 
        id="user-menu" 
        data-open="false"
        class=" absolute bottom-full left-2 mb-3 w-56 p-1.5 rounded-md
                bg-popover text-popover-foreground border border-border shadow-lg
                transition-all duration-200 ease-in-out
                transform-gpu origin-bottom
                opacity-0 scale-95 data-[open=true]:opacity-100 data-[open=true]:scale-100
                pointer-events-none data-[open=true]:pointer-events-auto"
    >
        <!-- Cabecera del menú con info del usuario -->
        <div class="flex p-1">
            {user?.image ? (
                <img src={user.image} alt={user.name || 'Avatar'} class="w-10 h-10 rounded-full" />
            ) : (
                <div class="w-10 h-10 rounded-full bg-muted flex items-center justify-center font-bold text-muted-foreground">
                    {initials}
                </div>
            )}
            <div class="px-2 py-1.5">
                <p class="text-sm font-semibold">{user?.name || 'Usuario'}</p>
                <p class="text-xs text-muted-foreground">{user?.email || ''}</p>
            </div>
        </div>
        <div class="h-px bg-border my-1"></div>

        <!-- Formulario para Cerrar Sesión -->
        <form action="/api/auth/signout" method="post">
            <button
                type="submit"
                class="flex items-center gap-3 w-full px-2 py-1.5 text-sm rounded-sm text-destructive hover:bg-destructive/10"
            >
                <LogoutIcon class="h-4 w-4" />
                <span>Cerrar Sesión</span>
            </button>
        </form>
    </div>

    <!-- Botón principal que muestra el perfil y activa el menú -->
    <button 
        id="user-menu-trigger" 
        type="button"
        class="group w-full flex items-center gap-3 p-2 rounded-md hover:bg-accent cursor-pointer"
    >
        {user?.image ? (
            <img src={user.image} alt={user.name || 'Avatar'} class="w-10 h-10 rounded-full" />
        ) : (
            <div class="w-10 h-10 rounded-full bg-muted flex items-center justify-center font-bold text-muted-foreground">
                {initials}
            </div>
        )}
        <div class="text-left group-data-[sidebar-collapsed=true]:hidden">
            <p class="text-sm font-semibold">{user?.name || 'Usuario'}</p>
            <p class="text-xs text-muted-foreground">{user?.email || ''}</p>
        </div>
        <div class="ml-auto group-data-[sidebar-collapsed=true]:hidden">
            <MoreHorizontalIcon class="h-5 w-5" />
        </div>
    </button>
</div>

<script>
    function initUserProfileMenu() {
        const wrapper = document.getElementById('user-profile-wrapper');
        const trigger = document.getElementById('user-menu-trigger');
        const menu = document.getElementById('user-menu');

        if (!wrapper || !trigger || !menu) return;

        const toggleMenu = (force?: boolean) => {
            const isOpen = menu.dataset.open === 'true';
            const newState = force === undefined ? !isOpen : force;
            menu.dataset.open = String(newState);
        };

        trigger.addEventListener('click', (e) => {
            e.stopPropagation();
            toggleMenu();
        });

        const closeMenu = (e: MouseEvent | KeyboardEvent) => {
            if (e instanceof KeyboardEvent && e.key !== 'Escape') return;
            if (wrapper && !wrapper.contains(e.target as Node)) {
                toggleMenu(false);
            }
        };
        
        document.addEventListener('click', closeMenu);
        document.addEventListener('keydown', closeMenu);
    }

    document.addEventListener('astro:page-load', initUserProfileMenu);
</script>
