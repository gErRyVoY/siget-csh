---
import MainLayout from "@/layouts/MainLayout.astro";
import { getSession } from "auth-astro/server";
import { prisma } from "@/lib/db";
import StatCard from "@/components/dashboard/StatCard.astro";

const session = await getSession(Astro.request);
if (!session || !session.user) {
    return Astro.redirect("/login");
}

const PRIVILEGED_ROLES = [1, 2, 3, 4, 5, 6, 15];
const isPrivileged = PRIVILEGED_ROLES.includes(session.user.rol?.id ?? -1);

// Fetch ticket counts by status
const ticketCounts = await prisma.ticket.groupBy({
    by: ['estatusId'],
    _count: {
        id: true,
    },
});

const statuses = await prisma.estatus.findMany();

const statusCounts = statuses.map(status => {
    const count = ticketCounts.find(c => c.estatusId === status.id)?._count.id || 0;
    return { name: status.nombre, count };
});

const totalTickets = statusCounts.reduce((acc, curr) => acc + curr.count, 0);
const newTickets = statusCounts.find(s => s.name === 'Nuevo')?.count || 0;
const solvedTickets = statusCounts.find(s => s.name === 'Solucionado')?.count || 0;
const pendingTickets = statusCounts.find(s => s.name === 'En espera')?.count || 0;

---

<MainLayout title="Dashboard">
    <div class="max-w-full mx-auto">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            <StatCard title="Total de Tickets" value={totalTickets.toString()} description="Todos los tickets registrados" />
            <StatCard title="Tickets Nuevos" value={newTickets.toString()} description="Tickets sin asignar" />
            <StatCard title="Tickets Solucionados" value={solvedTickets.toString()} description="Tickets marcados como solucionados" />
            <StatCard title="Tickets En espera" value={pendingTickets.toString()} description="Tickets en espera de respuesta" />
        </div>

        <div class="mt-8">
            <h2 class="text-xl font-bold mb-4">Resumen de Tickets por Estatus</h2>
            <div class="bg-card border rounded-lg p-6">
                <ul class="space-y-2">
                    {statusCounts.map(status => (
                        <li class="flex justify-between items-center">
                            <span>{status.name}</span>
                            <span class="font-bold">{status.count}</span>
                        </li>
                    ))}
                </ul>
            </div>
        </div>

    </div>
</MainLayout>
